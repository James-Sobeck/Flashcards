{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","Layout/DeckList.js","Layout/Home.js","Layout/DeckForm.js","Layout/CreateDeck.js","Layout/Card.js","Layout/Study.js","Layout/CardList.js","Layout/Deck.js","Layout/CardForm.js","Layout/AddCard.js","Layout/EditCard.js","Layout/EditDeck.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","createCard","card","Number","cardId","updateCard","updatedCard","deleteCard","append","DeckList","history","useHistory","deckid","length","description","to","xmlns","width","height","fill","viewBox","d","onClick","window","confirm","go","remove","fillRule","Home","useState","decks","setDecks","useEffect","ab","AbortController","listDecks","then","abort","class","map","DeckForm","formData","handleChange","htmlFor","type","placeholder","required","onChange","value","CreateDeck","initialFormState","setFormData","handleSubmit","event","preventDefault","push","target","form","Card","setCardId","flip","setFlip","front","back","Study","setDeck","useParams","CardList","index","Deck","setCards","CardForm","AddCard","handleSave","EditCard","setCard","readCard","EditDeck","Layout","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7208564.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:8080\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../utils/api\";\r\n\r\nfunction DeckList({ deck }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"card mb-1\" deckid={deck.id}>\r\n      <div className=\"card-body\">\r\n        <div className=\"row justify-content-between\">\r\n          <h5 className=\"card-title ml-2\">{deck.name}</h5>\r\n          <h6 className=\"mr-2\">{deck.cards.length} cards</h6>\r\n        </div>\r\n\r\n        <p className=\"card-text\">{deck.description}</p>\r\n        <Link to={`/decks/${deck.id}`}>\r\n          <button className=\"btn btn-secondary mr-1\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-eye-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\r\n              <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\r\n            </svg>{\" \"}\r\n            View\r\n          </button>\r\n        </Link>\r\n        <Link to={`/decks/${deck.id}/study`}>\r\n          <button className=\"btn btn-primary\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-book-half\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M8.5 2.687c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\r\n            </svg>{\" \"}\r\n            Study\r\n          </button>\r\n        </Link>\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={() => {\r\n            async function remove() {\r\n              if (\r\n                window.confirm(\"Are you sure you want to delete this deck?\")\r\n              ) {\r\n                await deleteDeck(deck.id);\r\n                history.go(0);\r\n              } else {\r\n                history.go(0);\r\n              }\r\n            }\r\n            remove();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-trash\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DeckList from \"./DeckList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listDecks } from \"../utils/api\";\r\n\r\nfunction Home() {\r\n  const [decks, setDecks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    listDecks(ab.signal).then(setDecks);\r\n    return () => ab.abort();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Link to=\"/decks/new\">\r\n          <button className=\"btn btn-secondary mb-1\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-square-fill\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0z\"/>\r\n</svg> {\"  \"}\r\n            Create Deck\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        {decks.map((deck) => (\r\n          <DeckList key={deck.id} deck={deck} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction DeckForm({ formData, handleChange }) {\r\n  return (\r\n    <>\r\n      <form id=\"deckForm\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Deck Name\"\r\n            required\r\n            onChange={handleChange}\r\n            value={formData.name}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\" htmlFor=\"description\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"Brief description of the deck\"\r\n            required\r\n            onChange={handleChange}\r\n            value={formData.description}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeckForm;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\";\r\nimport { createDeck } from \"../utils/api\";\r\n\r\nfunction CreateDeck() {\r\n  const history = useHistory();\r\n\r\n  const initialFormState = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const response = await createDeck(formData);\r\n    setFormData({ ...initialFormState });\r\n    history.push(`/decks/${response.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-house-door-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\" />\r\n              </svg>{\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Create Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>Create Deck</h2>\r\n      <DeckForm formData={formData} handleChange={handleChange} />\r\n      <Link to=\"/\">\r\n        <button className=\"btn btn-secondary mr-2\">Cancel</button>\r\n      </Link>\r\n      <button\r\n        form=\"deckForm\"\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateDeck;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction Card({ cards, cardId, setCardId, deckId }) {\r\n  const [flip, setFlip] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  if (cards) {\r\n    if (cards.length > 2) {\r\n      return (\r\n        <>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">\r\n                Card {cardId} of {cards.length}\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                {flip ? cards[cardId - 1].front : cards[cardId - 1].back}\r\n              </p>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => setFlip(!flip)}\r\n              >\r\n                Flip\r\n              </button>\r\n              {!flip ? (\r\n                <button\r\n                  className=\"btn btn-primary ml-1\"\r\n                  onClick={() => {\r\n                    if (cardId === cards.length) {\r\n                      if (window.confirm(\"Restart cards?\")) {\r\n                        setCardId(1);\r\n                        setFlip(!flip);\r\n                      } else {\r\n                        history.push(\"/\");\r\n                      }\r\n                    } else {\r\n                      setCardId(cardId + 1);\r\n                      setFlip(!flip);\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <h2>Not enough cards</h2>\r\n          <p>\r\n            You need at least 3 cards to study. There are {cards.length} cards\r\n            in this deck.\r\n          </p>\r\n          <Link to={`/decks/${deckId}/cards/new`}>\r\n            <button className=\"btn btn-primary\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-square-fill\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0z\"/>\r\n</svg>{\" \"}\r\n              Add Cards\r\n            </button>\r\n          </Link>\r\n        </>\r\n      );\r\n    }\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Study() {\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  const deckId = useParams().deckId;\r\n\r\n  const [cardId, setCardId] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    readDeck(deckId, ab.signal).then(setDeck);\r\n    return () => ab.abort();\r\n  }, [deckId]);\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-house-door-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\" />\r\n              </svg>{\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Study\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h1>Study: {deck.name}</h1>\r\n      <Card\r\n        cards={deck.cards}\r\n        cardId={cardId}\r\n        setCardId={setCardId}\r\n        deckId={deckId}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Study;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteCard } from \"../utils/api\";\r\n\r\nfunction CardList({ cards }) {\r\n  const history = useHistory();\r\n\r\n  if (cards) {\r\n    return cards.map((card, index) => (\r\n      <div className=\"card mb-1\" key={index}>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <p className=\"card-text col\">{card.front}</p>\r\n            <p className=\"card-text col\">{card.back}</p>\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-danger float-right\"\r\n            onClick={() => {\r\n              async function remove() {\r\n                if (\r\n                  window.confirm(\r\n                    \"Delete this card? You will not be able to recover it.\"\r\n                  )\r\n                ) {\r\n                  await deleteCard(card.id);\r\n                  history.go(0);\r\n                }\r\n              }\r\n              remove();\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-trash\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n          <Link to={`/decks/${card.deckId}/cards/${card.id}/edit`}>\r\n            <button className=\"btn btn-secondary mr-1 float-right\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-pencil-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n              </svg>{\" \"}\r\n              Edit\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    ));\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck, deleteDeck } from \"../utils/api\";\r\nimport CardList from \"./CardList\";\r\n\r\nfunction Deck() {\r\n  const history = useHistory();\r\n\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  const deckId = useParams().deckId;\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    readDeck(deckId, ab.signal).then(setDeck);\r\n    return () => ab.abort();\r\n  }, [deckId]);\r\n\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCards(deck.cards);\r\n  }, [deck]);\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-house-door-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\" />\r\n              </svg>{\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {deck.name}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <div className=\"mb-1\">\r\n        <div>\r\n          <div>\r\n            <h5>{deck.name}</h5>\r\n          </div>\r\n          <p>{deck.description}</p>\r\n          <Link to={`/decks/${deck.id}/edit`}>\r\n            <button className=\"btn btn-secondary mr-1\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-pencil-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n              </svg>{\" \"}\r\n              Edit\r\n            </button>\r\n          </Link>\r\n          <Link to={`/decks/${deck.id}/study`}>\r\n            <button className=\"btn btn-primary\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-book-half\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M8.5 2.687c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\" />\r\n              </svg>{\" \"}\r\n              Study\r\n            </button>\r\n          </Link>\r\n          <Link to={`/decks/${deckId}/cards/new`}>\r\n            <button className=\"btn btn-primary ml-1\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-square-fill\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0z\"/>\r\n</svg>{\" \"}\r\n              Add Cards\r\n            </button>\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger float-right\"\r\n            onClick={() => {\r\n              async function remove() {\r\n                if (\r\n                  window.confirm(\"Are you sure you want to delete this deck?\")\r\n                ) {\r\n                  await deleteDeck(deck.id);\r\n                  history.push(\"/\");\r\n                } else {\r\n                  history.go(0);\r\n                }\r\n              }\r\n              remove();\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-trash\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"mt-4\">Cards</h2>\r\n      <CardList cards={cards} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Deck;\r\n","import React from \"react\";\r\n\r\nfunction CardForm({ formData, handleChange }) {\r\n  return (\r\n    <>\r\n      <form id=\"CardForm\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\" htmlFor=\"front\">\r\n            Front\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            id=\"front\"\r\n            name=\"front\"\r\n            placeholder=\"Front side of card\"\r\n            required\r\n            onChange={handleChange}\r\n            value={formData.front}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\" htmlFor=\"back\">\r\n            Back\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            id=\"back\"\r\n            name=\"back\"\r\n            placeholder=\"Back side of card\"\r\n            required\r\n            onChange={handleChange}\r\n            value={formData.back}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck, createCard } from \"../utils/api\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nfunction AddCard() {\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  const deckId = useParams().deckId;\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    readDeck(deckId, ab.signal).then(setDeck);\r\n    return () => ab.abort();\r\n  }, [deckId]);\r\n\r\n  const history = useHistory();\r\n\r\n  const initialFormState = {\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault();\r\n    await createCard(deckId, formData);\r\n    setFormData({ ...initialFormState });\r\n    history.push(`/decks/${deckId}/cards/new`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-house-door-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\" />\r\n              </svg>{\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Add Card\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>{deck.name}: Add Card</h2>\r\n      <CardForm formData={formData} handleChange={handleChange} />\r\n      <Link to={`/decks/${deckId}`}>\r\n        <button className=\"btn btn-secondary mr-2\">Done</button>\r\n      </Link>\r\n      <button\r\n        form=\"cardForm\"\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        onClick={handleSave}\r\n      >\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck, updateCard, readCard } from \"../utils/api\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nfunction EditCard() {\r\n  const [deck, setDeck] = useState([]);\r\n  const [card, setCard] = useState({});\r\n\r\n  const { deckId, cardId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    readDeck(deckId, ab.signal).then(setDeck);\r\n    return () => ab.abort();\r\n  }, [deckId]);\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    readCard(cardId, ab.signal).then(setCard);\r\n    return () => ab.abort();\r\n  }, [cardId]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleChange = ({ target }) => {\r\n    setCard({\r\n      ...card,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault();\r\n    await updateCard(card);\r\n    history.push(`/decks/${deckId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-house-door-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\" />\r\n              </svg>{\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>Deck {deck.name}</Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit Card {cardId}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>Edit Card</h2>\r\n      <CardForm formData={card} handleChange={handleChange} />\r\n      <Link to={`/decks/${deckId}`}>\r\n        <button className=\"btn btn-secondary mr-2\">Cancel</button>\r\n      </Link>\r\n      <button\r\n        form=\"cardForm\"\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        onClick={handleSave}\r\n      >\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api\";\r\nimport DeckForm from \"./DeckForm\";\r\n\r\nfunction EditDeck() {\r\n  const deckId = useParams().deckId;\r\n\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ab = new AbortController();\r\n    readDeck(deckId, ab.signal).then(setDeck);\r\n    return () => ab.abort();\r\n  }, [deckId]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleChange = ({ target }) => {\r\n    setDeck({\r\n      ...deck,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async (event) => {\r\n    event.preventDefault();\r\n    await updateDeck(deck);\r\n    history.push(`/decks/${deckId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-house-door-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\" />\r\n              </svg>{\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>Edit Deck</h2>\r\n      <DeckForm formData={deck} handleChange={handleChange} />\r\n      <Link to={`/decks/${deckId}`}>\r\n        <button className=\"btn btn-secondary mr-2\">Cancel</button>\r\n      </Link>\r\n      <button\r\n        form=\"deckForm\"\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        onClick={handleSave}\r\n      >\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditDeck;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n//import { listDecks } from \"../utils/api\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport Study from \"./Study\";\nimport Deck from \"./Deck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport EditDeck from \"./EditDeck\";\n\nfunction Layout() {\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/decks/new\">\n            <CreateDeck />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <Study />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <Deck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}